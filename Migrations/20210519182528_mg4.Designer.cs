// <auto-generated />
using System;
using DergiAboneProje.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAboneTakip.Migrations
{
    [DbContext(typeof(DergiDbContext))]
    [Migration("20210519182528_mg4")]
    partial class mg4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAboneTakip.Models.Admin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KullaniciAD")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("Varchar(16)");

                    b.Property<string>("Rol")
                        .HasMaxLength(1)
                        .HasColumnType("Varchar(1)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("Varchar(16)");

                    b.HasKey("ID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("DergiAboneProje.Models.Abonelikler", b =>
                {
                    b.Property<int>("KayıtID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DergiID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("KayıtSuresiAy")
                        .HasColumnType("int");

                    b.Property<int>("KayıtSuresiGun")
                        .HasColumnType("int");

                    b.Property<DateTime>("KayıtTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("ToplamUcret")
                        .HasColumnType("int");

                    b.Property<int?>("UyeID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("KayıtID");

                    b.HasIndex("DergiID");

                    b.HasIndex("UyeID");

                    b.ToTable("Aboneliklers");
                });

            modelBuilder.Entity("DergiAboneProje.Models.Dergiler", b =>
                {
                    b.Property<int>("DergiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AylikUcret")
                        .HasColumnType("int");

                    b.Property<string>("DergiAD")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DergiTARIH")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KategoriID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("DergiID");

                    b.HasIndex("KategoriID");

                    b.ToTable("Dergilers");
                });

            modelBuilder.Entity("DergiAboneProje.Models.Kategoriler", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KategoriAD")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("KategoriID");

                    b.ToTable("Kategorilers");
                });

            modelBuilder.Entity("DergiAboneProje.Models.Uyeler", b =>
                {
                    b.Property<int>("UyeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DergilerDergiID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<long>("TelNo")
                        .HasColumnType("bigint");

                    b.Property<string>("UyeAD")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UyeID");

                    b.HasIndex("DergilerDergiID");

                    b.ToTable("Uyelers");
                });

            modelBuilder.Entity("DergiAboneProje.Models.Abonelikler", b =>
                {
                    b.HasOne("DergiAboneProje.Models.Dergiler", "Dergi")
                        .WithMany()
                        .HasForeignKey("DergiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DergiAboneProje.Models.Uyeler", "Uye")
                        .WithMany()
                        .HasForeignKey("UyeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dergi");

                    b.Navigation("Uye");
                });

            modelBuilder.Entity("DergiAboneProje.Models.Dergiler", b =>
                {
                    b.HasOne("DergiAboneProje.Models.Kategoriler", "Kategoriler")
                        .WithMany("Dergilers")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategoriler");
                });

            modelBuilder.Entity("DergiAboneProje.Models.Uyeler", b =>
                {
                    b.HasOne("DergiAboneProje.Models.Dergiler", null)
                        .WithMany("Uyeler")
                        .HasForeignKey("DergilerDergiID");
                });

            modelBuilder.Entity("DergiAboneProje.Models.Dergiler", b =>
                {
                    b.Navigation("Uyeler");
                });

            modelBuilder.Entity("DergiAboneProje.Models.Kategoriler", b =>
                {
                    b.Navigation("Dergilers");
                });
#pragma warning restore 612, 618
        }
    }
}
